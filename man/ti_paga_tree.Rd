% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ti_paga_tree.R
\name{ti_paga_tree}
\alias{ti_paga_tree}
\title{PAGA Tree}
\usage{
ti_paga_tree(
  filter_features = TRUE,
  n_neighbors = 15L,
  n_comps = 50L,
  n_dcs = 15L,
  resolution = 1L,
  embedding_type = "fa"
)
}
\arguments{
\item{filter_features}{Whether to do feature filtering. Default: TRUE. Format:
logical.}

\item{n_neighbors}{Number of neighbours for knn. Domain: U(1, 100). Default:
15. Format: integer.}

\item{n_comps}{Number of principal components. Domain: U(0, 100). Default: 50.
Format: integer.}

\item{n_dcs}{Number of diffusion components for denoising graph, 0 means no
denoising. Domain: U(0, 40). Default: 15. Format: integer.}

\item{resolution}{Resolution of louvain clustering, which determines the
granularity of the clustering. Higher values will result in more clusters.
Domain: U(0.1, 10). Default: 1. Format: numeric.}

\item{embedding_type}{Either 'umap' (scales very well, recommended for very
large datasets) or 'fa' (ForceAtlas2, often a bit more intuitive for small
datasets). Domain: {umap, fa}. Default: fa. Format: character.}
}
\value{
A TI method wrapper to be used together with
\code{\link[dynwrap:infer_trajectories]{infer_trajectory}}
}
\description{
Will generate a trajectory using \href{https://doi.org/10.1186/s13059-019-1663-x}{PAGA Tree}. This method runs exactly the
same as normal PAGA, but will construct a minimal-spanning tree between
clusters

This method was wrapped inside a
\href{https://github.com/dynverse/ti_paga_tree}{container}.
The original code of this method is available
\href{https://github.com/theislab/graph_abstraction}{here}.
}
\references{
Wolf, F.A., Hamey, F.K., Plass, M., Solana, J., Dahlin, J.S.,
GÃ¶ttgens, B., Rajewsky, N., Simon, L., Theis, F.J., 2019. PAGA: graph
abstraction reconciles clustering with trajectory inference through a topology
preserving map of single cells. Genome Biology 20.
}
\keyword{method}
